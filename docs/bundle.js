(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Concert+One&display=swap);"]),s.push([n.id,":root {\n  --gif-color: #38b6ff;\n  --sticker-color: #ac38ff;\n}\n\nbody {\n  background-color: #212121;\n  margin: 0;\n  height: 100vh;\n  color: white;\n  font-family: 'Concert One';\n}\n\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  gap: 40px;\n}\n.container-search {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n  gap: 40px;\n}\n\n.hero {\n  width: 50%;\n  align-self: end;\n  justify-self: center;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n}\n.hero img {\n  max-width: 75%;\n}\n.search {\n  width: 50%;\n  align-self:start;\n  justify-self: center;\n}\n.search-results {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n.translate-results {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.search-results img {\n  max-width: 400px;\n  height: 400px;\n}\n\n.search-bar {\n  display: flex;\n  justify-content: space-around;\n  background-color: white;\n  border-radius: 10px;\n}\n.search-bar img {\n  align-self: center;\n  justify-self: center;\n  height: 40px;\n}\n.search-bar input {\n  width: 90%;\n  height: 50px;\n  font-size: 2rem;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  font-family: 'Concert One', cursive;\n}\n.button-array{\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n  gap: 30px;\n}\n\nbutton {\n  height: 40px;\n  width: 140px;\n}\n\n\nbutton {\n  background-color: var(--gif-color);\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 10px;\n  font-size: 1rem;\n}\n.button-search:hover {\n  background-color: white;\n  color: #212121;\n  cursor: pointer;\n}\n\nbutton:active {\n  box-shadow: inset 0 0 5px 0 #212121;\n}\n\n.mode {\n  color: #212121;\n  background-color: white;\n  border: 5px solid var(--gif-color);\n  cursor: pointer;\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,oBAAoB;EACpB,wBAAwB;AAC1B;;AAEA;EACE,yBAAyB;EACzB,SAAS;EACT,aAAa;EACb,YAAY;EACZ,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,SAAS;AACX;AACA;EACE,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,SAAS;AACX;;AAEA;EACE,UAAU;EACV,eAAe;EACf,oBAAoB;EACpB,aAAa;EACb,gBAAgB;EAChB,uBAAuB;AACzB;AACA;EACE,cAAc;AAChB;AACA;EACE,UAAU;EACV,gBAAgB;EAChB,oBAAoB;AACtB;AACA;EACE,aAAa;EACb,eAAe;EACf,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,YAAY;AACd;AACA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,mCAAmC;AACrC;AACA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,YAAY;AACd;;;AAGA;EACE,kCAAkC;EAClC,YAAY;EACZ,iBAAiB;EACjB,YAAY;EACZ,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,uBAAuB;EACvB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,cAAc;EACd,uBAAuB;EACvB,kCAAkC;EAClC,eAAe;AACjB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Concert+One&display=swap');\n\n:root {\n  --gif-color: #38b6ff;\n  --sticker-color: #ac38ff;\n}\n\nbody {\n  background-color: #212121;\n  margin: 0;\n  height: 100vh;\n  color: white;\n  font-family: 'Concert One';\n}\n\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  gap: 40px;\n}\n.container-search {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n  gap: 40px;\n}\n\n.hero {\n  width: 50%;\n  align-self: end;\n  justify-self: center;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n}\n.hero img {\n  max-width: 75%;\n}\n.search {\n  width: 50%;\n  align-self:start;\n  justify-self: center;\n}\n.search-results {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n.translate-results {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.search-results img {\n  max-width: 400px;\n  height: 400px;\n}\n\n.search-bar {\n  display: flex;\n  justify-content: space-around;\n  background-color: white;\n  border-radius: 10px;\n}\n.search-bar img {\n  align-self: center;\n  justify-self: center;\n  height: 40px;\n}\n.search-bar input {\n  width: 90%;\n  height: 50px;\n  font-size: 2rem;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  font-family: 'Concert One', cursive;\n}\n.button-array{\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n  gap: 30px;\n}\n\nbutton {\n  height: 40px;\n  width: 140px;\n}\n\n\nbutton {\n  background-color: var(--gif-color);\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 10px;\n  font-size: 1rem;\n}\n.button-search:hover {\n  background-color: white;\n  color: #212121;\n  cursor: pointer;\n}\n\nbutton:active {\n  box-shadow: inset 0 0 5px 0 #212121;\n}\n\n.mode {\n  color: #212121;\n  background-color: white;\n  border: 5px solid var(--gif-color);\n  cursor: pointer;\n}"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},s=[],i=0;i<n.length;i++){var c=n[i],A=r.base?c[0]+r.base:c[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=a(p,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:f,references:1})}s.push(d)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var i=t(o[s]);e[i].references--}for(var c=r(n,a),A=0;A<o.length;A++){var l=t(o[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),s=t.n(o),i=t(565),c=t.n(i),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(402),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const h="7vr26jhdw6W8KqBNqbDVCETV2QabSoyX",g=document.getElementById("container"),m=document.getElementById("article"),C=document.querySelector(".hero");function E(){m.innerHTML=""}function y(n,e,t){w(n,e,t).then((n=>{var e;E(),e=n.data,g.classList.add("container-search"),g.classList.remove("container"),m.classList.add("search-results"),m.classList.remove("search"),e.forEach((n=>{const e=document.createElement("img");e.src=n.images.original.url,m.append(e)})),C.style.alignSelf="start"}))}function b(n,e,t){w(n,e,t).then((n=>{E(),function(n){g.classList.add("container-search"),g.classList.remove("container"),m.classList.add("search-results"),m.classList.remove("search");const e=document.createElement("img");e.src=n.images.original.url,m.append(e),C.style.alignSelf="start"}(n.data)}))}function v(n,e){w(n,e).then((n=>{var e;E(),e=n.data,g.classList.add("container-search"),g.classList.remove("container"),m.classList.add("search-results"),m.classList.remove("search"),e.forEach((n=>{const e=document.createElement("img");e.src=n.images.original.url,m.append(e)})),C.style.alignSelf="start"}))}function B(n,e,t){w(n,e,t).then((n=>{E(),function(n){g.classList.add("container-search"),g.classList.remove("container"),m.classList.add("search-results"),m.classList.remove("search");const e=document.createElement("img");e.src=n.images.original.url,m.append(e),C.style.alignSelf="start"}(n.data)}))}async function w(n,e,t="dog"){if("search"===e){const r=await fetch(`https://api.giphy.com/v1/${n}/${e}?api_key=${h}&q=${t}&limit=30&offset=0&rating=pg-13&lang=en`,{mode:"cors"});return await r.json()}if("translate"===e){const r=await fetch(`https://api.giphy.com/v1/${n}/${e}?api_key=${h}&s=${t}`,{mode:"cors"});return await r.json()}if("trending"===e){const t=await fetch(`https://api.giphy.com/v1/${n}/${e}?api_key=${h}&limit=30&rating=pg-13`);return await t.json()}if("random"===e){const r=await fetch(`https://api.giphy.com/v1/${n}/${e}?api_key=${h}&tag=${t}&rating=pg-13`);return await r.json()}}function x(n,e,t){if("GIFs"===n)switch(e){case 0:y(n.toLowerCase(),"search",t);break;case 1:b(n.toLowerCase(),"translate",t);break;case 2:v(n.toLowerCase(),"trending");break;case 3:B(n.toLowerCase(),"random",t)}else if("Stickers"===n)switch(e){case 0:y(n.toLowerCase(),"search",t);break;case 1:b(n.toLowerCase(),"translate",t);break;case 2:v(n.toLowerCase(),"trending");break;case 3:B(n.toLowerCase(),"random",t)}}const k=t.p+"bf7c00a4cf3b50288170.svg";function L(n){return n.value}!function(){const n=["Search","Translate","Trending","Feeling Giphy"];let e=document.getElementById("article"),t=document.createElement("div");t.classList.add("search-bar");let r=document.createElement("img");r.src=k;let a=document.createElement("input");t.append(r,a);let o=document.createElement("div");o.classList.add("button-array");let s=document.createElement("button");s.classList.add("mode"),s.textContent="GIFs",o.append(s);for(let e=0;e<4;e++){let t=document.createElement("button");t.classList.add("button-search"),t.textContent=n[e],o.append(t)}let i=Array.from(o.childNodes).slice(1,5);!function(n,e){n.addEventListener("click",(t=>{"Sticker"===t.target.textContent?(t.target.textContent="GIFs",e.forEach((n=>{n.style.backgroundColor="var(--gif-color)"})),n.style.border="5px solid var(--gif-color)",x("GIF","search")):(t.target.textContent="Stickers",e.forEach((n=>{n.style.backgroundColor="var(--sticker-color)"})),n.style.border="5px solid var(--sticker-color)",x("Sticker","search"))}))}(s,i),function(n,e,t){e.forEach((r=>{r.addEventListener("click",(()=>{console.log(L(t)),x(n.textContent,e.indexOf(r),L(t))}))}))}(s,i,a),e.append(t,o)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,